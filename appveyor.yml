# Build worker image (VM template)
image:
  - Ubuntu1604
  - Ubuntu1804
  - Visual Studio 2017
  

platform: x64

configuration: Release

for:
  -
    matrix:
      only:
        - image: Ubuntu1604
    clone_folder: ~/pbcvt
    init:
      - sh: export REQUESTED_PYTHON_VERSION=2.X
    test_script:
      - sh: cd $APPVEYOR_BUILD_FOLDER/tests
      - python -m pytest tests.py
  -
    matrix:
      only:
        - image: Ubuntu1804
    clone_folder: ~/pbcvt
    init:
      - sh: export REQUESTED_PYTHON_VERSION=3.X
    test_script:
      - sh: cd $APPVEYOR_BUILD_FOLDER/tests
      - python3 -m pytest tests.py
  -
    matrix:
      only:
        - image: Visual Studio 2017
    clone_folder: c:\projects\pbcvt

    init:
      # skip unsupported combinations
      - cmd: set REQUESTED_PYTHON_VERSION=3.X
      - cmd: set arch=
      - cmd: ECHO on
      - cmd: if "%PLATFORM%"=="x64" ( set arch=Win64)
      - cmd: echo %arch%
      - cmd: echo %APPVEYOR_BUILD_WORKER_IMAGE%
      - cmd: call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat
      - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" ( set CMAKE_GENERATOR="Visual Studio 15 2017 %arch%" )
      - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" ( set CMAKE_GENERATOR="Visual Studio 14 2015 %arch%" )
      - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2013" ( set CMAKE_GENERATOR="Visual Studio 12 2013 %arch%" )
      - cmd: if "%PLATFORM%"=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
      - cmd: echo %CMAKE_GENERATOR%
      # print info
      - cmd: cmake --version
      - cmd: msbuild /version
    test_script:
      - cmd: cd %APPVEYOR_BUILD_FOLDER%/tests
      - python -m pytest tests.py

# scripts that run after cloning repository
install:
  # Windows 10

  - cmd: choco install -y opencv
  - cmd: set PATH=C:\tools\opencv\build\bin;C:\tools\opencv\build\x64\vc15\bin;C:\Python37-x64;C:\Python37-x64\Scripts;%PATH%
  - cmd: set OpenCV_DIR=C:\tools\opencv\build\x64\vc15\lib
  # install numpy & pytest
  - cmd: pip install numpy pytest
  # Ubuntu (all)
  - sh: sudo DEBIAN_FRONTEND=noninteractive apt-get update -qq && sudo apt-get install -qq
  - sh: sudo DEBIAN_FRONTEND=noninteractive apt-get -y install python3-dev python3-numpy python3-pytest
  - sh: sudo DEBIAN_FRONTEND=noninteractive apt-get -y install python-dev python-numpy python-pytest
  - sh: sudo DEBIAN_FRONTEND=noninteractive apt-get -y install libboost-python-dev
  - sh: sudo DEBIAN_FRONTEND=noninteractive apt-get -y install libtbb-dev libopencv-dev

build_script:
  # Windows 10
  - cmd: mkdir build
  - cmd:    cd build
  - cmd: cmake --version
  - cmd: cmake .. -G %CMAKE_GENERATOR% -DCMAKE_BUILD_TYPE=%Configuration% -DBUILD_TEST_PROJECT=ON -DPYTHON_DESIRED_VERSION=%REQUESTED_PYTHON_VERSION% -DBOOST_ROOT=C:\Libraries\boost_1_69_0
  - cmd: cmake --build . --target ALL_BUILD --config %Configuration% -- /maxcpucount:4
  # Ubuntu (all)
  - sh: echo Ubuntu build script
  - sh: echo Requested python version -
  - sh: echo $REQUESTED_PYTHON_VERSION
  - sh: mkdir build; cd build
  - sh: cmake -DCMAKE_BUILD_TYPE=$Configuration -DBUILD_TEST_PROJECT=ON  -DPYTHON_DESIRED_VERSION=$REQUESTED_PYTHON_VERSION ..
  - sh: make -j4




#build:
#  project: c:\projects\pbcvt\build\pbcvt.sln
#  verbosity: minimal
#  parallel: true
